[changelog]
header = """
# Changelog\n
All notable changes to Python version will be documented in this file.\n
"""
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
            {% if commit.breaking %}[**breaking**] {% endif %}\
            {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
footer = """
<!-- generated by git-cliff -->
"""
trim = true
postprocessors = [
  { pattern = "\\*\\(py\\)\\* ", replace = "" },
]

[git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_preprocessors = []
tag_pattern = "py-v[0-9]+.*"
commit_parsers = [
  # Match conventional commit messages that belong to rust scope.
  { message = "^feat\\(py|all\\)", group = "Features" },
  { message = "^fix\\(py|all\\)", group = "Bug Fixes" },
  { message = "^docs\\(py|all\\)", group = "Documentation" },
  { message = "^style\\(py|all\\)", group = "Styles" },
  { message = "^refactor\\(py|all\\)", group = "Code Refactoring" },
  { message = "^perf\\(py|all\\)", group = "Performance Improvements" },
  { message = "^test\\(py|all\\)", group = "Tests" },
  { message = "^build\\(py|all\\)", group = "Build System" },
  { message = "^ci\\(py|all\\)", group = "Continuous Integration" },
  { message = "^chore\\(py|all\\)", group = "Chores" },
  { message = "^revert\\(py|all\\)", group = "Reverts" },
  { message = "^[a-z]\\+-\\(py|all\\)!", group = "Breaking Changes", breaking = true },
]
filter_commits = true
topo_order = false
sort_commits = "oldest"
